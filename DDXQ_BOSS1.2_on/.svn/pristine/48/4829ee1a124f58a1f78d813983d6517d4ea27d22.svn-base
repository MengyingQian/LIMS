<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd  
http://www.springframework.org/schema/websocket  http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />

	<!-- 启用spring aspectj 注解 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 启用 注解扫描，这里因为涉及到spring mvc的流转，所以暂时过滤掉一部分，延后扫描 -->
	<context:component-scan base-package="com.ddxq.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

    <!-- 配置websocket 支持stomp协议，可以使用activeMQ的队列和话题  path-matcher="pathMatcher"-->
    <!-- <websocket:message-broker  
        application-destination-prefix="/app"  path-matcher="pathMatcher" >  
        <websocket:stomp-endpoint path="/stomp">  
            <websocket:sockjs />  
        </websocket:stomp-endpoint>  
  
        <websocket:stomp-broker-relay prefix="/topic,/queue"  
            relay-host="127.0.0.1" relay-port="61613" heartbeat-receive-interval="20000"  
            heartbeat-send-interval="20000" />  
    </websocket:message-broker>   -->


    <!-- <bean id="pathMatcher" class="org.springframework.util.AntPathMatcher">
        <constructor-arg index="0" value="." />
    </bean> -->
    
	  <!-- 启用转化器对日期进行转换 -->
	  <mvc:annotation-driven conversion-service="conversionService"/>
	  <bean id="conversionService" 
	            class="org.springframework.context.support.ConversionServiceFactoryBean">
	        <property name="converters">
	            <list>
	                <bean class="com.ddxq.base.converter.StringToDateConverter">
	                    <constructor-arg type="java.lang.String" value="yyyy-mm-dd"/>
	                </bean>
	            </list>
	        </property>
	    </bean>

	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
					<property name="supportedMediaTypes" value="application/json" />
				</bean>
			</list>
		</property>
	</bean>


	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />


	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小限制200kb。注意maxUploadSize属性的限制不是针对单个文件，而是一次上传的所有文件的容量之和 -->
		<property name="maxUploadSize" value="5000000" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>

</beans>